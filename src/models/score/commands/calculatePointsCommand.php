<?php namespace FormulaFantasy\Score;

include __DIR__ . '/ScoreCommand.php';

use FormulaFantasy\Database\DatabasePlain;
use FormulaFantasy\Results\QualifyingResultsDriver;
use FormulaFantasy\Results\RaceResultsDriver;
use FormulaFantasy\Score\Score;
use phpDocumentor\Reflection\Types\Integer;
use phpDocumentor\Reflection\Types\This;

class calculatePointsCommand extends ScoreCommand
{
    public $ans;

    private $ScoreObject;
    private $completeArray;
    private $db;
    private $driverArray = [];

    /**
     * calculatePointsCommand constructor.
     * @param Score $so
     * @param array $completeArray
     */
    public function __construct(Score $so, Array $completeArray)
    {

        $this->ScoreObject = $so;
        $this->completeArray = $completeArray;

        $this->driverArray = [
            'primaryDriverId' => $completeArray['primaryDriverId'],
            'secondaryDriverId' => $completeArray['secondaryDriverId'],
            'turboDriverId' => $completeArray['turboDriverId']
    ];
        $this->db = new DatabasePlain();
    }

    public function Execute()
    {
        $standardDriverRunningTotal = 0;
        $turboDriverRunningTotal = 0;
        foreach ($this->driverArray as $item)
        {
            //parent::Execute(); // TODO: Change the autogenerated stub
            //set points based on finish position
            $rLine = (new RaceResultsDriver($this->db, $item, 1031))->getRaceResultLineByDriver();
            $standardDriverRunningTotal += $this->ScoreObject->getRaceScore($rLine);
            //set points based on qualifying results
            $qLine = (new QualifyingResultsDriver($this->db, $item, 1031))->getQualifyingResultLineByDriver();
            $standardDriverRunningTotal += $this->ScoreObject->getQualifyingScore($qLine);
            //set points based on grid positions
            //set points based on qualifying buckets
            //set points based on penalties
            //set points based on fastest lap
            //set points based on constructor finish
            //$this->teamOwnerObject->setPointsBasedOnDriver($this->completeArray);

            /*$this->ScoreObject->calculatePointsForDriver($this->completeArray);*/

            //$this->teamOwnerObject->setPointsBasedOnDriver($this->raceResults);
        }
        $this->ans = $standardDriverRunningTotal;
    }


}

